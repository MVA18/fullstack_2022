{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport anecdotesReducer from \"./reducers/anecdoteReducer\";\nimport notificationReducer from \"./reducers/notificationReducer\";\nimport filterReducer from \"./reducers/filterReducer\";\nimport anecdoteService from './services/anecdotes';\nimport { create } from './reducers/anecdoteReducer';\nconst store = configureStore({\n  reducer: {\n    anecdotes: anecdotesReducer,\n    notification: notificationReducer,\n    filter: filterReducer\n  }\n});\nanecdoteService.getAll().then(anecdotes => anecdotes.forEach(anecdote => {\n  store.dispatch(create(anecdote));\n}));\nexport default store;","map":{"version":3,"sources":["/home/mva18/Projects/fullstack_2022/part6/redux-anecdotes/src/store.js"],"names":["configureStore","anecdotesReducer","notificationReducer","filterReducer","anecdoteService","create","store","reducer","anecdotes","notification","filter","getAll","then","forEach","anecdote","dispatch"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,kBAA7B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,SAASC,MAAT,QAAuB,4BAAvB;AAEA,MAAMC,KAAK,GAAGN,cAAc,CAAC;AACzBO,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAEP,gBADN;AAELQ,IAAAA,YAAY,EAAEP,mBAFT;AAGLQ,IAAAA,MAAM,EAAEP;AAHH;AADgB,CAAD,CAA5B;AAQAC,eAAe,CAACO,MAAhB,GAAyBC,IAAzB,CAA8BJ,SAAS,IACnCA,SAAS,CAACK,OAAV,CAAkBC,QAAQ,IAAI;AAC1BR,EAAAA,KAAK,CAACS,QAAN,CAAeV,MAAM,CAACS,QAAD,CAArB;AACH,CAFD,CADJ;AAKA,eAAeR,KAAf","sourcesContent":["import {configureStore} from \"@reduxjs/toolkit\"\nimport anecdotesReducer from \"./reducers/anecdoteReducer\"\nimport notificationReducer from \"./reducers/notificationReducer\"\nimport filterReducer from \"./reducers/filterReducer\"\nimport anecdoteService from './services/anecdotes'\nimport { create } from './reducers/anecdoteReducer'\n\nconst store = configureStore({\n    reducer: {\n        anecdotes: anecdotesReducer,\n        notification: notificationReducer,\n        filter: filterReducer\n    }\n})\n\nanecdoteService.getAll().then(anecdotes =>\n    anecdotes.forEach(anecdote => {\n        store.dispatch(create(anecdote))\n    }))\n\nexport default store"]},"metadata":{},"sourceType":"module"}