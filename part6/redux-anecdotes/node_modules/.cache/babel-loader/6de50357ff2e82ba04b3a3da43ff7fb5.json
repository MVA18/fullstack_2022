{"ast":null,"code":"var _jsxFileName = \"/home/mva18/Projects/fullstack_2022/part6/redux-anecdotes/src/components/AnecdoteList.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { upvote } from '../reducers/anecdoteReducer';\nimport { showNotificationWithTimeout } from \"../actions/showNotificationWithTimeout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnecdoteList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const anecdotes = useSelector(state => {\n    console.log(state.filter);\n\n    if (state.filter) {\n      return state.anecdotes.filter(anecdote => {\n        return anecdote.content.toLowerCase().includes(state.filter.toLowerCase());\n      });\n    }\n\n    return state.anecdotes.slice().sort(function (a, b) {\n      return b['votes'] - a['votes'];\n    });\n  });\n\n  const vote = anecdote => {\n    dispatch(upvote(anecdote.id));\n    showNotificationWithTimeout(dispatch, `you voted '${anecdote.content}'`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: anecdotes.map(anecdote => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: anecdote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"has \", anecdote.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => vote(anecdote),\n          children: \"vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, anecdote.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnecdoteList, \"Dgkv9V7dQ75K89gVLGE6ayE9GY0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AnecdoteList;\nexport default AnecdoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnecdoteList\");","map":{"version":3,"sources":["/home/mva18/Projects/fullstack_2022/part6/redux-anecdotes/src/components/AnecdoteList.js"],"names":["useDispatch","useSelector","upvote","showNotificationWithTimeout","AnecdoteList","dispatch","anecdotes","state","console","log","filter","anecdote","content","toLowerCase","includes","slice","sort","a","b","vote","id","map","votes"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,2BAAT,QAA4C,wCAA5C;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,SAAS,GAAGL,WAAW,CAAEM,KAAK,IAAI;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;;AACA,QAAGH,KAAK,CAACG,MAAT,EACA;AACI,aAAOH,KAAK,CAACD,SAAN,CAAgBI,MAAhB,CAAuBC,QAAQ,IAAI;AACtC,eAAOA,QAAQ,CAACC,OAAT,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCP,KAAK,CAACG,MAAN,CAAaG,WAAb,EAAxC,CAAP;AACH,OAFM,CAAP;AAGH;;AACD,WAAON,KAAK,CAACD,SAAN,CAAgBS,KAAhB,GAAwBC,IAAxB,CAA6B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChD,aAAOA,CAAC,CAAC,OAAD,CAAD,GAAaD,CAAC,CAAC,OAAD,CAArB;AACH,KAFM,CAAP;AAGH,GAX4B,CAA7B;;AAaA,QAAME,IAAI,GAAIR,QAAD,IAAc;AACvBN,IAAAA,QAAQ,CAACH,MAAM,CAACS,QAAQ,CAACS,EAAV,CAAP,CAAR;AACAjB,IAAAA,2BAA2B,CAACE,QAAD,EAAY,cAAcM,QAAQ,CAACC,OAAS,GAA5C,CAA3B;AACH,GAHD;;AAKA,sBACI;AAAA,cACMN,SAAS,CAACe,GAAV,CAAcV,QAAQ,iBACpB;AAAA,8BACI;AAAA,kBACMA,QAAQ,CAACC;AADf;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,2BACUD,QAAQ,CAACW,KADnB,eAEI;AAAQ,UAAA,OAAO,EAAG,MAAMH,IAAI,CAACR,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAAWA,QAAQ,CAACS,EAApB;AAAA;AAAA;AAAA;AAAA,YADF;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CApCD;;GAAMhB,Y;UAEeJ,W,EACCC,W;;;KAHhBG,Y;AAsCN,eAAeA,YAAf","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { upvote } from '../reducers/anecdoteReducer'\nimport { showNotificationWithTimeout } from \"../actions/showNotificationWithTimeout\";\n\nconst AnecdoteList = () => {\n\n    const dispatch = useDispatch()\n    const anecdotes = useSelector((state => {\n        console.log(state.filter)\n        if(state.filter)\n        {\n            return state.anecdotes.filter(anecdote => {\n                return anecdote.content.toLowerCase().includes(state.filter.toLowerCase())\n            })\n        }\n        return state.anecdotes.slice().sort(function (a, b) {\n            return b['votes'] - a['votes']\n        })\n    }))\n\n    const vote = (anecdote) => {\n        dispatch(upvote(anecdote.id))\n        showNotificationWithTimeout(dispatch, `you voted '${ anecdote.content }'`)\n    }\n\n    return (\n        <ul>\n            { anecdotes.map(anecdote =>\n                <div key={ anecdote.id }>\n                    <div>\n                        { anecdote.content }\n                    </div>\n                    <div>\n                        has { anecdote.votes }\n                        <button onClick={ () => vote(anecdote) }>vote</button>\n                    </div>\n                </div>\n            ) }\n        </ul>\n    )\n}\n\nexport default AnecdoteList"]},"metadata":{},"sourceType":"module"}