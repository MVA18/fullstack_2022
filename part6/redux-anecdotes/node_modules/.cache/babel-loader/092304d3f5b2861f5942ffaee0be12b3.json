{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState: [],\n  reducers: {\n    show(state, action) {\n      state.push(action.payload);\n      return state[state.length - 1].message;\n    },\n\n    reset(state, action) {\n      return state = [];\n    },\n\n    clearTimeOut(state, action) {\n      if (state.length > 1) {\n        state.forEach(notification => {\n          clearTimeout(notification.id);\n        });\n      }\n    }\n\n  }\n});\nexport const {\n  show,\n  reset,\n  clearTimeOut\n} = notificationSlice.actions;\nexport const setNotification = (content, timer) => {\n  return dispatch => {\n    const timeoutId = setTimeout(() => {\n      dispatch(reset());\n    }, timer);\n    const notification = {\n      id: timeoutId,\n      message: content\n    };\n    dispatch(clearTimeOut);\n    dispatch(show(notification));\n  };\n};\nexport default notificationSlice.reducer;","map":{"version":3,"sources":["/home/mva18/Projects/fullstack_2022/part6/redux-anecdotes/src/reducers/notificationReducer.js"],"names":["createSlice","notificationSlice","name","initialState","reducers","show","state","action","push","payload","length","message","reset","clearTimeOut","forEach","notification","clearTimeout","id","actions","setNotification","content","timer","dispatch","timeoutId","setTimeout","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,iBAAiB,GAAGD,WAAW,CAAC;AAClCE,EAAAA,IAAI,EAAE,cAD4B;AAElCC,EAAAA,YAAY,EAAE,EAFoB;AAGlCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAChBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACA,aAAOH,KAAK,CAACA,KAAK,CAACI,MAAN,GAAe,CAAhB,CAAL,CAAwBC,OAA/B;AACH,KAJK;;AAKNC,IAAAA,KAAK,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACjB,aAAOD,KAAK,GAAG,EAAf;AACH,KAPK;;AAQNO,IAAAA,YAAY,CAACP,KAAD,EAAQC,MAAR,EAAgB;AACxB,UAAGD,KAAK,CAACI,MAAN,GAAe,CAAlB,EAAqB;AACjBJ,QAAAA,KAAK,CAACQ,OAAN,CAAeC,YAAD,IAAkB;AAC5BC,UAAAA,YAAY,CAACD,YAAY,CAACE,EAAd,CAAZ;AACH,SAFD;AAGH;AACJ;;AAdK;AAHwB,CAAD,CAArC;AAqBA,OAAO,MAAM;AAAEZ,EAAAA,IAAF;AAAQO,EAAAA,KAAR;AAAeC,EAAAA;AAAf,IAAgCZ,iBAAiB,CAACiB,OAAxD;AAEP,OAAO,MAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC/C,SAAOC,QAAQ,IAAI;AACf,UAAMC,SAAS,GAAGC,UAAU,CAAC,MAAM;AAC/BF,MAAAA,QAAQ,CAACV,KAAK,EAAN,CAAR;AACH,KAF2B,EAEzBS,KAFyB,CAA5B;AAGA,UAAMN,YAAY,GAAI;AAClBE,MAAAA,EAAE,EAAEM,SADc;AAElBZ,MAAAA,OAAO,EAAES;AAFS,KAAtB;AAIAE,IAAAA,QAAQ,CAACT,YAAD,CAAR;AACAS,IAAAA,QAAQ,CAACjB,IAAI,CAACU,YAAD,CAAL,CAAR;AACH,GAVD;AAWH,CAZM;AAaP,eAAed,iBAAiB,CAACwB,OAAjC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst notificationSlice = createSlice({\n    name: 'notification',\n    initialState: [],\n    reducers: {\n        show(state, action) {\n            state.push(action.payload)\n            return state[state.length - 1].message\n        },\n        reset(state, action) {\n            return state = []\n        },\n        clearTimeOut(state, action) {\n            if(state.length > 1) {\n                state.forEach((notification) => {\n                    clearTimeout(notification.id)\n                })\n            }\n        },\n    }\n})\n\nexport const { show, reset, clearTimeOut } = notificationSlice.actions\n\nexport const setNotification = (content, timer) => {\n    return dispatch => {\n        const timeoutId = setTimeout(() => {\n            dispatch(reset())\n        }, timer)\n        const notification =  {\n            id: timeoutId,\n            message: content\n        }\n        dispatch(clearTimeOut)\n        dispatch(show(notification))\n    }\n}\nexport default notificationSlice.reducer\n"]},"metadata":{},"sourceType":"module"}