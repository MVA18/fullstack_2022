{"ast":null,"code":"import anecdoteService from '../services/anecdotes';\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    upvote(state, action) {\n      state.filter(anecdote => {\n        anecdote.votes = anecdote.id === action.payload ? anecdote.votes = anecdote.votes + 1 : anecdote.votes;\n        return anecdote;\n      });\n    },\n\n    create(state, action) {\n      state.push(action.payload);\n    },\n\n    set(state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  create,\n  upvote,\n  set\n} = noteSlice.actions;\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const notes = await anecdoteService.getAll();\n    dispatch(set(notes));\n  };\n};\nexport const createAnecdote = content => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(content);\n    dispatch(create(newAnecdote));\n  };\n};\nexport default anecdoteSlice.reducer;","map":{"version":3,"sources":["/home/mva18/Projects/fullstack_2022/part6/redux-anecdotes/src/reducers/anecdoteReducer.js"],"names":["anecdoteService","createSlice","anecdoteSlice","name","initialState","reducers","upvote","state","action","filter","anecdote","votes","id","payload","create","push","set","noteSlice","actions","initializeAnecdotes","dispatch","notes","getAll","createAnecdote","content","newAnecdote","createNew","reducer"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uBAA5B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,aAAa,GAAGD,WAAW,CAAC;AAC9BE,EAAAA,IAAI,EAAE,WADwB;AAE9BC,EAAAA,YAAY,EAAE,EAFgB;AAG9BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClBD,MAAAA,KAAK,CAACE,MAAN,CAAaC,QAAQ,IAAI;AACrBA,QAAAA,QAAQ,CAACC,KAAT,GAAiBD,QAAQ,CAACE,EAAT,KAAgBJ,MAAM,CAACK,OAAvB,GAAiCH,QAAQ,CAACC,KAAT,GAAiBD,QAAQ,CAACC,KAAT,GAAiB,CAAnE,GAAuED,QAAQ,CAACC,KAAjG;AACA,eAAOD,QAAP;AACH,OAHD;AAIH,KANK;;AAONI,IAAAA,MAAM,CAACP,KAAD,EAAQC,MAAR,EAAgB;AAClBD,MAAAA,KAAK,CAACQ,IAAN,CAAWP,MAAM,CAACK,OAAlB;AACH,KATK;;AAUNG,IAAAA,GAAG,CAACT,KAAD,EAAQC,MAAR,EAAgB;AACf,aAAOA,MAAM,CAACK,OAAd;AACH;;AAZK;AAHoB,CAAD,CAAjC;AAmBA,OAAO,MAAM;AAACC,EAAAA,MAAD;AAASR,EAAAA,MAAT;AAAiBU,EAAAA;AAAjB,IAAwBC,SAAS,CAACC,OAAxC;AAEP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACrC,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,KAAK,GAAG,MAAMrB,eAAe,CAACsB,MAAhB,EAApB;AACAF,IAAAA,QAAQ,CAACJ,GAAG,CAACK,KAAD,CAAJ,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAME,cAAc,GAAGC,OAAO,IAAI;AACrC,SAAO,MAAMJ,QAAN,IAAkB;AACrB,UAAMK,WAAW,GAAG,MAAMzB,eAAe,CAAC0B,SAAhB,CAA0BF,OAA1B,CAA1B;AACAJ,IAAAA,QAAQ,CAACN,MAAM,CAACW,WAAD,CAAP,CAAR;AACH,GAHD;AAIH,CALM;AAMP,eAAevB,aAAa,CAACyB,OAA7B","sourcesContent":["import anecdoteService from '../services/anecdotes'\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst anecdoteSlice = createSlice({\n    name: 'anecdotes',\n    initialState: [],\n    reducers: {\n        upvote(state, action) {\n            state.filter(anecdote => {\n                anecdote.votes = anecdote.id === action.payload ? anecdote.votes = anecdote.votes + 1 : anecdote.votes\n                return anecdote\n            })\n        },\n        create(state, action) {\n            state.push(action.payload)\n        },\n        set(state, action) {\n            return action.payload\n        }\n    },\n})\n\nexport const {create, upvote, set} = noteSlice.actions\n\nexport const initializeAnecdotes = () => {\n    return async dispatch => {\n        const notes = await anecdoteService.getAll()\n        dispatch(set(notes))\n    }\n}\n\nexport const createAnecdote = content => {\n    return async dispatch => {\n        const newAnecdote = await anecdoteService.createNew(content)\n        dispatch(create(newAnecdote))\n    }\n}\nexport default anecdoteSlice.reducer"]},"metadata":{},"sourceType":"module"}