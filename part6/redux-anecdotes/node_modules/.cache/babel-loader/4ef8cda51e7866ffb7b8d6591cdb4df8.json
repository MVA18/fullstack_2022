{"ast":null,"code":"var _jsxFileName = \"/home/mva18/Projects/fullstack_2022/part6/redux-anecdotes/src/components/AnecdoteList.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { upvoteAnecdote } from '../reducers/anecdoteReducer';\nimport { setNotification } from \"../reducers/notificationReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnecdoteList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const anecdotes = () => {\n    let anecdotes = props.anecdotes;\n\n    if (props.filter) {\n      anecdotes = props.anecdotes.filter(anecdote => {\n        return anecdote.content.toLowerCase().includes(props.filter.toLowerCase());\n      });\n    }\n\n    return anecdotes.slice().sort(function (a, b) {\n      return b['votes'] - a['votes'];\n    });\n  };\n\n  const vote = anecdote => {\n    dispatch(upvoteAnecdote(anecdote));\n    dispatch(setNotification(`you voted '${anecdote.content}'`, 5000));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: anecdotes().map(anecdote => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: anecdote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"has \", anecdote.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => vote(anecdote),\n          children: \"vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, anecdote.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnecdoteList, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AnecdoteList;\n\nconst mapStateToProps = state => {\n  return {\n    anecdotes: state.anecdotes,\n    filter: state.filter\n  };\n};\n\nconst ConnectedAnecdoteList = connect(mapStateToProps)(AnecdoteList);\nexport default ConnectedAnecdoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnecdoteList\");","map":{"version":3,"sources":["/home/mva18/Projects/fullstack_2022/part6/redux-anecdotes/src/components/AnecdoteList.js"],"names":["useDispatch","useSelector","connect","upvoteAnecdote","setNotification","AnecdoteList","props","dispatch","anecdotes","filter","anecdote","content","toLowerCase","includes","slice","sort","a","b","vote","map","votes","id","mapStateToProps","state","ConnectedAnecdoteList"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,OAAnC,QAAkD,aAAlD;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,eAAT,QAAgC,iCAAhC;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,QAAMQ,SAAS,GAAG,MAAM;AACpB,QAAIA,SAAS,GAAGF,KAAK,CAACE,SAAtB;;AACA,QAAGF,KAAK,CAACG,MAAT,EACA;AACID,MAAAA,SAAS,GAAGF,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuBC,QAAQ,IAAI;AAC3C,eAAOA,QAAQ,CAACC,OAAT,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCP,KAAK,CAACG,MAAN,CAAaG,WAAb,EAAxC,CAAP;AACH,OAFW,CAAZ;AAGH;;AACD,WAAOJ,SAAS,CAACM,KAAV,GAAkBC,IAAlB,CAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1C,aAAOA,CAAC,CAAC,OAAD,CAAD,GAAaD,CAAC,CAAC,OAAD,CAArB;AACH,KAFM,CAAP;AAGH,GAXD;;AAaA,QAAME,IAAI,GAAIR,QAAD,IAAc;AACvBH,IAAAA,QAAQ,CAACJ,cAAc,CAACO,QAAD,CAAf,CAAR;AACAH,IAAAA,QAAQ,CAACH,eAAe,CAAE,cAAcM,QAAQ,CAACC,OAAS,GAAlC,EAAsC,IAAtC,CAAhB,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,cACMH,SAAS,GAAGW,GAAZ,CAAgBT,QAAQ,iBACtB;AAAA,8BACI;AAAA,kBACMA,QAAQ,CAACC;AADf;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,2BACUD,QAAQ,CAACU,KADnB,eAEI;AAAQ,UAAA,OAAO,EAAG,MAAMF,IAAI,CAACR,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAAWA,QAAQ,CAACW,EAApB;AAAA;AAAA;AAAA;AAAA,YADF;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CApCD;;GAAMhB,Y;UAEeL,W;;;KAFfK,Y;;AAsCN,MAAMiB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHf,IAAAA,SAAS,EAAEe,KAAK,CAACf,SADd;AAEHC,IAAAA,MAAM,EAAEc,KAAK,CAACd;AAFX,GAAP;AAIH,CALD;;AAOA,MAAMe,qBAAqB,GAAGtB,OAAO,CAACoB,eAAD,CAAP,CAAyBjB,YAAzB,CAA9B;AACA,eAAemB,qBAAf","sourcesContent":["import { useDispatch, useSelector, connect } from \"react-redux\";\nimport { upvoteAnecdote } from '../reducers/anecdoteReducer'\nimport { setNotification } from \"../reducers/notificationReducer\";\n\nconst AnecdoteList = (props) => {\n\n    const dispatch = useDispatch()\n    const anecdotes = () => {\n        let anecdotes = props.anecdotes\n        if(props.filter)\n        {\n            anecdotes = props.anecdotes.filter(anecdote => {\n                return anecdote.content.toLowerCase().includes(props.filter.toLowerCase())\n            })\n        }\n        return anecdotes.slice().sort(function (a, b) {\n            return b['votes'] - a['votes']\n        })\n    }\n\n    const vote = (anecdote) => {\n        dispatch(upvoteAnecdote(anecdote))\n        dispatch(setNotification(`you voted '${ anecdote.content }'`, 5000))\n    }\n\n    return (\n        <ul>\n            { anecdotes().map(anecdote =>\n                <div key={ anecdote.id }>\n                    <div>\n                        { anecdote.content }\n                    </div>\n                    <div>\n                        has { anecdote.votes }\n                        <button onClick={ () => vote(anecdote) }>vote</button>\n                    </div>\n                </div>\n            ) }\n        </ul>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        anecdotes: state.anecdotes,\n        filter: state.filter,\n    }\n}\n\nconst ConnectedAnecdoteList = connect(mapStateToProps)(AnecdoteList)\nexport default ConnectedAnecdoteList"]},"metadata":{},"sourceType":"module"}