{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState: '',\n  reducers: {\n    show(state, action) {\n      return state = action.payload;\n    },\n\n    reset(state, action) {\n      return state = '';\n    }\n\n  }\n});\nexport const {\n  show,\n  reset\n} = notificationSlice.actions;\nexport const setNotification = (content, timer) => {\n  return dispatch => {\n    dispatch(show(content));\n    let timeouts = [];\n    timeouts.push(setTimeout(() => {\n      dispatch(reset());\n    }, timer));\n\n    if (timeouts.length > 1) {\n      for (var i = 0; i < timeouts.length; i++) {\n        clearTimeout(timeouts[i]);\n      }\n    }\n  };\n};\nexport default notificationSlice.reducer;","map":{"version":3,"sources":["/home/mva18/Projects/fullstack_2022/part6/redux-anecdotes/src/reducers/notificationReducer.js"],"names":["createSlice","notificationSlice","name","initialState","reducers","show","state","action","payload","reset","actions","setNotification","content","timer","dispatch","timeouts","push","setTimeout","length","i","clearTimeout","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,iBAAiB,GAAGD,WAAW,CAAC;AAClCE,EAAAA,IAAI,EAAE,cAD4B;AAElCC,EAAAA,YAAY,EAAE,EAFoB;AAGlCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAChB,aAAOD,KAAK,GAAGC,MAAM,CAACC,OAAtB;AACH,KAHK;;AAINC,IAAAA,KAAK,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACjB,aAAOD,KAAK,GAAG,EAAf;AACH;;AANK;AAHwB,CAAD,CAArC;AAaA,OAAO,MAAM;AAAED,EAAAA,IAAF;AAAQI,EAAAA;AAAR,IAAkBR,iBAAiB,CAACS,OAA1C;AAEP,OAAO,MAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC/C,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACT,IAAI,CAACO,OAAD,CAAL,CAAR;AACA,QAAIG,QAAQ,GAAG,EAAf;AACAA,IAAAA,QAAQ,CAACC,IAAT,CAAcC,UAAU,CAAC,MAAM;AAC3BH,MAAAA,QAAQ,CAACL,KAAK,EAAN,CAAR;AACH,KAFuB,EAErBI,KAFqB,CAAxB;;AAGA,QAAGE,QAAQ,CAACG,MAAT,GAAkB,CAArB,EACA;AACI,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,QAAQ,CAACG,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClCC,QAAAA,YAAY,CAACL,QAAQ,CAACI,CAAD,CAAT,CAAZ;AACH;AACJ;AACJ,GAZD;AAaH,CAdM;AAeP,eAAelB,iBAAiB,CAACoB,OAAjC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst notificationSlice = createSlice({\n    name: 'notification',\n    initialState: '',\n    reducers: {\n        show(state, action) {\n            return state = action.payload\n        },\n        reset(state, action) {\n            return state = ''\n        },\n    }\n})\n\nexport const { show, reset } = notificationSlice.actions\n\nexport const setNotification = (content, timer) => {\n    return dispatch => {\n        dispatch(show(content))\n        let timeouts = [];\n        timeouts.push(setTimeout(() => {\n            dispatch(reset())\n        }, timer))\n        if(timeouts.length > 1)\n        {\n            for (var i=0; i<timeouts.length; i++) {\n                clearTimeout(timeouts[i]);\n            }\n        }\n    }\n}\nexport default notificationSlice.reducer\n"]},"metadata":{},"sourceType":"module"}