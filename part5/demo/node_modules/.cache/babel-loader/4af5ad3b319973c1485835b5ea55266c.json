{"ast":null,"code":"var _jsxFileName = \"/home/mva18/Projects/fullstack/part5/blogs-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport Form from \"./components/Form\";\nimport Notification from \"./components/Notification\";\nimport personsService from \"./services/persons\";\nimport loginService from './services/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [search, setSearch] = useState(false);\n  const [filteredPersons, setFilteredPersons] = useState([]);\n  const [notificationMessage, setNotificationMessage] = useState({\n    message: 'some error happened...',\n    type: ''\n  });\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const contacts = search ? filteredPersons : persons;\n\n  const RemoveContact = contact => {\n    if (window.confirm(`Delete ${contact.name} ?`)) {\n      personsService.remove(contact.id).then(() => {\n        setPersons(persons.filter(n => n.id !== contact.id));\n        setNotificationMessage({\n          message: `Contact '${contact.name}' was successfully removed`,\n          type: 'success'\n        });\n        setTimeout(() => {\n          setNotificationMessage({\n            message: null,\n            type: null\n          });\n        }, 5000);\n      }).catch(error => {\n        setNotificationMessage({\n          message: `Contact '${contact.name}' was already removed from server`,\n          type: 'error'\n        });\n        setPersons(persons.filter(n => n.id !== contact.id));\n        setTimeout(() => {\n          setNotificationMessage({\n            message: null,\n            type: null\n          });\n        }, 5000);\n      });\n    }\n  };\n\n  const hook = () => {\n    personsService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  };\n\n  useEffect(hook, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedPersonappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      personsService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedPersonappUser', JSON.stringify(user));\n      personsService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notificationMessage: notificationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), user === null ? loginForm() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" logged-in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), noteForm()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      persons: persons,\n      setFilteredPersons: setFilteredPersons,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      persons: persons,\n      setPersons: setPersons,\n      setNotificationMessage: setNotificationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      contacts: contacts,\n      removeContact: RemoveContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"8+LETNFU+pPyrR+eLm7VvrwQXtE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mva18/Projects/fullstack/part5/blogs-frontend/src/App.js"],"names":["useState","useEffect","Persons","Filter","Form","Notification","personsService","loginService","App","persons","setPersons","search","setSearch","filteredPersons","setFilteredPersons","notificationMessage","setNotificationMessage","message","type","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","contacts","RemoveContact","contact","window","confirm","name","remove","id","then","filter","n","setTimeout","catch","error","hook","getAll","initialPersons","loggedUserJSON","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","exception","loginForm","noteForm"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACe,mBAAD,EAAsBC,sBAAtB,IAAgDhB,QAAQ,CAAC;AAACiB,IAAAA,OAAO,EAAE,wBAAV;AAAoCC,IAAAA,IAAI,EAAE;AAA1C,GAAD,CAA9D;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACyB,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAM2B,QAAQ,GAAGhB,MAAM,GAAGE,eAAH,GAAqBJ,OAA5C;;AAEA,QAAMmB,aAAa,GAAIC,OAAD,IAAa;AAC/B,QAAIC,MAAM,CAACC,OAAP,CAAgB,UAASF,OAAO,CAACG,IAAK,IAAtC,CAAJ,EAAgD;AAC5C1B,MAAAA,cAAc,CAAC2B,MAAf,CAAsBJ,OAAO,CAACK,EAA9B,EACKC,IADL,CACW,MAAM;AACLzB,QAAAA,UAAU,CAACD,OAAO,CAAC2B,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASL,OAAO,CAACK,EAArC,CAAD,CAAV;AACAlB,QAAAA,sBAAsB,CAAC;AACnBC,UAAAA,OAAO,EAAG,YAAWY,OAAO,CAACG,IAAK,4BADf;AAEnBd,UAAAA,IAAI,EAAE;AAFa,SAAD,CAAtB;AAIAoB,QAAAA,UAAU,CAAC,MAAM;AACbtB,UAAAA,sBAAsB,CAAC;AAACC,YAAAA,OAAO,EAAE,IAAV;AAAgBC,YAAAA,IAAI,EAAE;AAAtB,WAAD,CAAtB;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAVT,EAWKqB,KAXL,CAWWC,KAAK,IAAI;AACZxB,QAAAA,sBAAsB,CAAC;AACnBC,UAAAA,OAAO,EAAG,YAAWY,OAAO,CAACG,IAAK,mCADf;AAEnBd,UAAAA,IAAI,EAAE;AAFa,SAAD,CAAtB;AAIAR,QAAAA,UAAU,CAACD,OAAO,CAAC2B,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASL,OAAO,CAACK,EAArC,CAAD,CAAV;AACAI,QAAAA,UAAU,CAAC,MAAM;AACbtB,UAAAA,sBAAsB,CAAC;AAACC,YAAAA,OAAO,EAAE,IAAV;AAAgBC,YAAAA,IAAI,EAAE;AAAtB,WAAD,CAAtB;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OApBL;AAqBH;AACJ,GAxBD;;AA0BA,QAAMuB,IAAI,GAAG,MAAM;AACfnC,IAAAA,cAAc,CAACoC,MAAf,GACKP,IADL,CACUQ,cAAc,IAAI;AAAEjC,MAAAA,UAAU,CAACiC,cAAD,CAAV;AAA4B,KAD1D;AAEH,GAHD;;AAIA1C,EAAAA,SAAS,CAACwC,IAAD,EAAO,EAAP,CAAT;AAEAxC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM2C,cAAc,GAAGd,MAAM,CAACe,YAAP,CAAoBC,OAApB,CAA4B,qBAA5B,CAAvB;;AACA,QAAIF,cAAJ,EAAoB;AAChB,YAAMnB,IAAI,GAAGsB,IAAI,CAACC,KAAL,CAAWJ,cAAX,CAAb;AACAlB,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAnB,MAAAA,cAAc,CAAC2C,QAAf,CAAwBxB,IAAI,CAACyB,KAA7B;AACH;AACJ,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACjCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACA,YAAM5B,IAAI,GAAG,MAAMlB,YAAY,CAAC+C,KAAb,CAAmB;AAAEjC,QAAAA,QAAF;AAAYE,QAAAA;AAAZ,OAAnB,CAAnB;AAEAO,MAAAA,MAAM,CAACe,YAAP,CAAoBU,OAApB,CAA4B,qBAA5B,EAAmDR,IAAI,CAACS,SAAL,CAAe/B,IAAf,CAAnD;AAEAnB,MAAAA,cAAc,CAAC2C,QAAf,CAAwBxB,IAAI,CAACyB,KAA7B;AACAxB,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAH,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH,KATD,CASE,OAAOiC,SAAP,EAAkB;AAChBrC,MAAAA,eAAe,CAAC,mBAAD,CAAf;AACAkB,MAAAA,UAAU,CAAC,MAAM;AACblB,QAAAA,eAAe,CAAC,IAAD,CAAf;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;AACJ,GAjBD;;AAmBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,mBAAmB,EAAEL;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIKU,IAAI,KAAK,IAAT,GACGiC,SAAS,EADZ,gBAEG;AAAA,8BACI;AAAA,mBAAIjC,IAAI,CAACO,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK2B,QAAQ,EAFb;AAAA;AAAA;AAAA;AAAA;AAAA,YANR,eAYI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAElD,OAAjB;AAA0B,MAAA,kBAAkB,EAAEK,kBAA9C;AAAkE,MAAA,SAAS,EAAEF;AAA7E;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEH,OAAf;AAAwB,MAAA,UAAU,EAAEC,UAApC;AAAgD,MAAA,sBAAsB,EAAEM;AAAxE;AAAA;AAAA;AAAA;AAAA,YAdJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAgBI,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEW,QAAnB;AAA6B,MAAA,aAAa,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA7FD;;GAAMpB,G;;KAAAA,G;AA+FN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport Form from \"./components/Form\";\nimport Notification from \"./components/Notification\";\nimport personsService from \"./services/persons\";\nimport loginService from './services/login'\n\nconst App = () => {\n\n    const [persons, setPersons] = useState([])\n    const [search, setSearch] = useState(false)\n    const [filteredPersons, setFilteredPersons] = useState([])\n    const [notificationMessage, setNotificationMessage] = useState({message: 'some error happened...', type: '' })\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [user, setUser] = useState(null)\n\n    const contacts = search ? filteredPersons : persons;\n\n    const RemoveContact = (contact) => {\n        if (window.confirm(`Delete ${contact.name} ?`)) {\n            personsService.remove(contact.id)\n                .then( () => {\n                        setPersons(persons.filter(n => n.id !== contact.id))\n                        setNotificationMessage({\n                            message: `Contact '${contact.name}' was successfully removed`,\n                            type: 'success'\n                        })\n                        setTimeout(() => {\n                            setNotificationMessage({message: null, type: null})\n                        }, 5000)\n                    })\n                .catch(error => {\n                    setNotificationMessage({\n                        message: `Contact '${contact.name}' was already removed from server`,\n                        type: 'error'\n                    })\n                    setPersons(persons.filter(n => n.id !== contact.id))\n                    setTimeout(() => {\n                        setNotificationMessage({message: null, type: null})\n                    }, 5000)\n                })\n        }\n    }\n\n    const hook = () => {\n        personsService.getAll()\n            .then(initialPersons => { setPersons(initialPersons) })\n    }\n    useEffect(hook, [])\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedPersonappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            personsService.setToken(user.token)\n        }\n    }, [])\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try {\n            const user = await loginService.login({ username, password })\n\n            window.localStorage.setItem('loggedPersonappUser', JSON.stringify(user))\n\n            personsService.setToken(user.token)\n            setUser(user)\n            setUsername('')\n            setPassword('')\n        } catch (exception) {\n            setErrorMessage('Wrong credentials')\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification notificationMessage={notificationMessage} />\n\n            {user === null ?\n                loginForm() :\n                <div>\n                    <p>{user.name} logged-in</p>\n                    {noteForm()}\n                </div>\n            }\n            \n            <Filter persons={persons} setFilteredPersons={setFilteredPersons} setSearch={setSearch} />\n            <h2>add a new</h2>\n            <Form persons={persons} setPersons={setPersons} setNotificationMessage={setNotificationMessage}/>\n            <h2>Numbers</h2>\n            <Persons contacts={contacts} removeContact={RemoveContact}/>\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}