{"ast":null,"code":"var _jsxFileName = \"/home/mva18/Projects/fullstack/part2/2.15-2.18/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport personsService from \"../services/persons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    persons,\n    setPersons\n  } = _ref;\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [updateContactId, setUpdateContactId] = useState(null);\n\n  const resetNameNumberState = () => {\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const addContact = event => {\n    event.preventDefault();\n    const contactObject = {\n      name: newName,\n      number: newNumber\n    };\n    const found = persons.some(el => {\n      if (el.name === newName) {\n        setUpdateContactId(el.id);\n        return false;\n      }\n\n      return true;\n    });\n\n    if (found) {\n      if (window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)) {\n        personsService.update(updateContactId, contactObject).then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson));\n          resetNameNumberState();\n        });\n        return;\n      }\n    }\n\n    personsService.create(contactObject).then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson));\n      resetNameNumberState();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addContact,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleNameChange,\n        value: newName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleNumberChange,\n        value: newNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"LPs/Jghm6SEz54AjrCPWfXBAJlg=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/mva18/Projects/fullstack/part2/2.15-2.18/src/components/Form.js"],"names":["useState","personsService","Form","persons","setPersons","newName","setNewName","newNumber","setNewNumber","updateContactId","setUpdateContactId","resetNameNumberState","handleNameChange","event","target","value","handleNumberChange","addContact","preventDefault","contactObject","name","number","found","some","el","id","window","confirm","update","then","returnedPerson","map","person","create","concat"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;;AAEA,MAAMC,IAAI,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAA0B;AAEpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,IAAD,CAAtD;;AAEA,QAAMW,oBAAoB,GAAG,MAC7B;AACIL,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAJD;;AAMA,QAAMI,gBAAgB,GAAIC,KAAD,IAAW;AAAEP,IAAAA,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AAAgC,GAAtE;;AACA,QAAMC,kBAAkB,GAAIH,KAAD,IAAW;AAAEL,IAAAA,YAAY,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AAAkC,GAA1E;;AAEA,QAAME,UAAU,GAAIJ,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACK,cAAN;AAEA,UAAMC,aAAa,GAAG;AAClBC,MAAAA,IAAI,EAAEf,OADY;AAElBgB,MAAAA,MAAM,EAAEd;AAFU,KAAtB;AAKA,UAAMe,KAAK,GAAGnB,OAAO,CAACoB,IAAR,CAAaC,EAAE,IAAI;AAC7B,UAAGA,EAAE,CAACJ,IAAH,KAAYf,OAAf,EAAwB;AACpBK,QAAAA,kBAAkB,CAACc,EAAE,CAACC,EAAJ,CAAlB;AACA,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KANa,CAAd;;AAQA,QAAGH,KAAH,EAAS;AACL,UAAII,MAAM,CAACC,OAAP,CAAgB,GAAEtB,OAAQ,oEAA1B,CAAJ,EAAoG;AAChGJ,QAAAA,cAAc,CAAC2B,MAAf,CAAsBnB,eAAtB,EAAuCU,aAAvC,EAAsDU,IAAtD,CAA2DC,cAAc,IAAI;AACzE1B,UAAAA,UAAU,CAACD,OAAO,CAAC4B,GAAR,CAAYC,MAAM,IAAIA,MAAM,CAACP,EAAP,KAAcK,cAAc,CAACL,EAA7B,GAAkCO,MAAlC,GAA2CF,cAAjE,CAAD,CAAV;AACAnB,UAAAA,oBAAoB;AACvB,SAHD;AAIA;AACH;AACJ;;AAEDV,IAAAA,cAAc,CAACgC,MAAf,CAAsBd,aAAtB,EAAqCU,IAArC,CAA0CC,cAAc,IAAI;AACxD1B,MAAAA,UAAU,CAACD,OAAO,CAAC+B,MAAR,CAAeJ,cAAf,CAAD,CAAV;AACAnB,MAAAA,oBAAoB;AACvB,KAHD;AAIH,GA9BD;;AAgCA,sBACI;AAAM,IAAA,QAAQ,EAAEM,UAAhB;AAAA,4BACI;AAAA,wCACU;AAAO,QAAA,QAAQ,EAAEL,gBAAjB;AAAmC,QAAA,KAAK,EAAEP;AAA1C;AAAA;AAAA;AAAA;AAAA,cADV;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,0CACY;AAAO,QAAA,QAAQ,EAAEW,kBAAjB;AAAqC,QAAA,KAAK,EAAET;AAA5C;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA5DD;;GAAML,I;;KAAAA,I;AA8DN,eAAeA,IAAf","sourcesContent":["import {useState} from \"react\";\nimport personsService from \"../services/persons\";\n\nconst Form = ({persons, setPersons}) => {\n\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [updateContactId, setUpdateContactId] = useState(null)\n\n    const resetNameNumberState = () =>\n    {\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleNameChange = (event) => { setNewName(event.target.value) }\n    const handleNumberChange = (event) => { setNewNumber(event.target.value) }\n\n    const addContact = (event) => {\n        event.preventDefault()\n\n        const contactObject = {\n            name: newName,\n            number: newNumber\n        }\n\n        const found = persons.some(el => {\n            if(el.name === newName) {\n                setUpdateContactId(el.id)\n                return false\n            }\n            return true\n        })\n\n        if(found){\n            if (window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)) {\n                personsService.update(updateContactId, contactObject).then(returnedPerson => {\n                    setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n                    resetNameNumberState()\n                })\n                return;\n            }\n        }\n\n        personsService.create(contactObject).then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            resetNameNumberState()\n        })\n    }\n\n    return(\n        <form onSubmit={addContact}>\n            <div>\n                name: <input onChange={handleNameChange} value={newName}/>\n            </div>\n            <div>\n                number: <input onChange={handleNumberChange} value={newNumber} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}