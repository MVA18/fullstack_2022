{"ast":null,"code":"var _jsxFileName = \"/home/mva18/Projects/fullstack/part2/2.15-2.18/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport personsService from \"../services/persons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    persons,\n    setPersons,\n    setNotificationMessage\n  } = _ref;\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const resetNameNumberState = () => {\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const addContact = event => {\n    event.preventDefault();\n    const contactObject = {\n      name: newName,\n      number: newNumber\n    };\n    let updateContactID = null;\n    const found = persons.some(el => {\n      updateContactID = el.id;\n      return el.name === newName;\n    });\n\n    if (found) {\n      if (window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)) {\n        personsService.update(updateContactID, contactObject).then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson));\n          setNotificationMessage({\n            message: `Contact '${contactObject.name}' was successfully added`,\n            type: 'success'\n          });\n          setTimeout(() => {\n            setNotificationMessage({\n              message: null,\n              type: null\n            });\n          }, 5000);\n          resetNameNumberState();\n        }).catch(error => {\n          setNotificationMessage({\n            message: `Contact '${contactObject.name}' was already removed from server`,\n            type: 'error'\n          });\n          setTimeout(() => {\n            setNotificationMessage({\n              message: null,\n              type: null\n            });\n          }, 5000);\n          setPersons(persons.filter(n => n.id !== updateContactID));\n        });\n      }\n\n      return;\n    }\n\n    personsService.create(contactObject).then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson));\n      resetNameNumberState();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addContact,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleNameChange,\n        value: newName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleNumberChange,\n        value: newNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"hX6U5bNNuNU4id/SHXfc8tOdMvo=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/mva18/Projects/fullstack/part2/2.15-2.18/src/components/Form.js"],"names":["useState","personsService","Form","persons","setPersons","setNotificationMessage","newName","setNewName","newNumber","setNewNumber","resetNameNumberState","handleNameChange","event","target","value","handleNumberChange","addContact","preventDefault","contactObject","name","number","updateContactID","found","some","el","id","window","confirm","update","then","returnedPerson","map","person","message","type","setTimeout","catch","error","filter","n","create","concat"],"mappings":"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","sourcesContent":["import {useState} from \"react\";\nimport personsService from \"../services/persons\";\n\nconst Form = ({persons, setPersons, setNotificationMessage}) => {\n\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n\n    const resetNameNumberState = () =>\n    {\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleNameChange = (event) => { setNewName(event.target.value) }\n    const handleNumberChange = (event) => { setNewNumber(event.target.value) }\n\n    const addContact = (event) => {\n        event.preventDefault()\n\n        const contactObject = {\n            name: newName,\n            number: newNumber\n        }\n\n        let updateContactID = null\n        const found = persons.some(el => {\n            updateContactID = el.id\n            return el.name === newName\n        })\n\n        if(found){\n            if (window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)) {\n                personsService.update(updateContactID, contactObject)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n                        setNotificationMessage({message:`Contact '${contactObject.name}' was successfully added`, type: 'success'})\n                        setTimeout(() => { setNotificationMessage({message : null, type : null}) },5000)\n                        resetNameNumberState()\n                    })\n                    .catch(error => {\n                        setNotificationMessage({message:`Contact '${contactObject.name}' was already removed from server`, type: 'error'})\n                    setTimeout(() => { setNotificationMessage({message : null, type : null}) },5000)\n                        setPersons(persons.filter(n => n.id !== updateContactID))\n                })\n            }\n            return;\n        }\n\n        personsService.create(contactObject).then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            resetNameNumberState()\n        })\n    }\n\n    return(\n        <form onSubmit={addContact}>\n            <div>\n                name: <input onChange={handleNameChange} value={newName}/>\n            </div>\n            <div>\n                number: <input onChange={handleNumberChange} value={newNumber} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}