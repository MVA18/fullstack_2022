{"ast":null,"code":"var _jsxFileName = \"/home/mva18/Projects/fullstack/part2/2.1-2.5/src/components/Content.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Total = _ref => {\n  let {\n    parts\n  } = _ref;\n  const sum = parts.reduce((accumulator, _ref2) => {\n    let {\n      exercises\n    } = _ref2;\n    return accumulator + exercises;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [\"total of \", sum, \" exercises\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Total;\n\nconst Part = _ref3 => {\n  let {\n    part\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [part.name, \" \", part.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Part;\n\nconst Content = _ref4 => {\n  let {\n    parts\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      part: part\n    }, part.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Total, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = Content;\nexport default Content;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Total\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");","map":{"version":3,"sources":["/home/mva18/Projects/fullstack/part2/2.1-2.5/src/components/Content.js"],"names":["Total","parts","sum","reduce","accumulator","exercises","Part","part","name","Content","map","id"],"mappings":";;;;AAAA,MAAMA,KAAK,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAEzB,QAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa,CAACC,WAAD,YAA8B;AAAA,QAAhB;AAACC,MAAAA;AAAD,KAAgB;AACnD,WAAOD,WAAW,GAAGC,SAArB;AACH,GAFW,EAET,CAFS,CAAZ;AAIA,sBAAQ;AAAA,2BAAG;AAAA,8BAAkBH,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CAPD;;KAAMF,K;;AASN,MAAMM,IAAI,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACT;AAAA,eACKA,IAAI,CAACC,IADV,OACiBD,IAAI,CAACF,SADtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADS;AAAA,CAAb;;MAAMC,I;;AAKN,MAAMG,OAAO,GAAG;AAAA,MAAC;AAAER,IAAAA;AAAF,GAAD;AAAA,sBACZ;AAAA,eACMA,KAAK,CAACS,GAAN,CAAUH,IAAI,iBACZ,QAAC,IAAD;AAAoB,MAAA,IAAI,EAAEA;AAA1B,OAAWA,IAAI,CAACI,EAAhB;AAAA;AAAA;AAAA;AAAA,YADF,CADN,eAII,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEV;AAAd;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADY;AAAA,CAAhB;;MAAMQ,O;AAQN,eAAeA,OAAf","sourcesContent":["const Total = ({ parts }) => {\n\n    const sum = parts.reduce((accumulator, {exercises}) => {\n        return accumulator + exercises;\n    }, 0);\n\n    return (<p><strong>total of {sum} exercises</strong></p>)\n}\n\nconst Part = ({ part }) =>\n    <p>\n        {part.name} {part.exercises}\n    </p>\n\nconst Content = ({ parts }) =>\n    <>\n        { parts.map(part =>\n            <Part key={part.id} part={part}/>\n        )}\n        <Total parts={parts} />\n    </>\n\nexport default Content"]},"metadata":{},"sourceType":"module"}