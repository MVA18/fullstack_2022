{"ast":null,"code":"var _jsxFileName = \"/home/mva18/Projects/fullstack/part1/1.6-1.14/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Button from \"./utils/Button\";\nimport StatisticLine from \"./utils/StatisticLine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  let {\n    title\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 39\n  }, this);\n};\n\n_c = Header;\n\nconst Average = _ref2 => {\n  let {\n    good,\n    bad,\n    all\n  } = _ref2;\n  const average = (good - bad) / all;\n  return /*#__PURE__*/_jsxDEV(Display, {\n    title: 'average',\n    value: average\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 14\n  }, this);\n};\n\n_c2 = Average;\n\nconst Positive = _ref3 => {\n  let {\n    good,\n    all\n  } = _ref3;\n  const positive = good / all * 100;\n  return /*#__PURE__*/_jsxDEV(Display, {\n    title: 'positive',\n    value: positive + \" %\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 14\n  }, this);\n};\n\n_c3 = Positive;\n\nconst Statistics = _ref4 => {\n  let {\n    good,\n    bad,\n    neutral,\n    all\n  } = _ref4;\n\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n      title: 'good',\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      title: 'neutral',\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      title: 'bad',\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      title: 'all',\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Average, {\n      good: good,\n      bad: bad,\n      all: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Positive, {\n      good: good,\n      all: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c4 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n\n  const setState = (stateToSet, value) => {\n    setAll(all + 1);\n    stateToSet(value + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: 'give feedback'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setState(setGood, good),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setState(setNeutral, neutral),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setState(setBad, bad),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      title: 'statistics'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      all: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"uTssgC4nlUSepBgkUpbW/ujAc84=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Average\");\n$RefreshReg$(_c3, \"Positive\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/home/mva18/Projects/fullstack/part1/1.6-1.14/src/App.js"],"names":["useState","Button","StatisticLine","Header","title","Average","good","bad","all","average","Positive","positive","Statistics","neutral","App","setGood","setNeutral","setBad","setAll","setState","stateToSet","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport Button from \"./utils/Button\";\nimport StatisticLine from \"./utils/StatisticLine\";\n\nconst Header = ({title}) => {return ( <h1>{title}</h1> )}\n\nconst Average = ({good, bad, all}) => {\n    const average = (good - bad) / all;\n    return ( <Display title={'average'} value={average}/> )}\n\nconst Positive = ({good, all}) => {\n    const positive = (good / all) * 100;\n    return ( <Display title={'positive'} value={positive + \" %\"}/> )}\n\nconst Statistics = ({good, bad, neutral, all}) => {\n    if (all === 0) {\n\n        return (\n            <div>\n                No feedback given\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <StatisticLine title={'good'} value={good}/>\n            <StatisticLine title={'neutral'} value={neutral}/>\n            <StatisticLine title={'bad'} value={bad}/>\n            <StatisticLine title={'all'} value={all}/>\n            <Average good={good} bad={bad} all={all}/>\n            <Positive good={good} all={all}/>\n        </>\n    )\n}\n\nconst App = () => {\n\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0);\n\n  const setState = (stateToSet, value) => {\n      setAll(all + 1);\n      stateToSet(value + 1);\n  }\n\n    return (\n      <div>\n          <Header title={'give feedback'}/>\n          <Button onClick={() => setState(setGood, good)} text='good' />\n          <Button onClick={() => setState(setNeutral, neutral)} text='neutral' />\n          <Button onClick={() => setState(setBad, bad)} text='bad' />\n          <Header title={'statistics'}/>\n          <Statistics good={good} neutral={neutral} bad={bad} all={all}/>\n      </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}