{"ast":null,"code":"var _jsxFileName = \"/home/mva18/Projects/fullstack/part2/2.11-2.14/2.12-2.14/src/components/Country.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = _ref => {\n  _s();\n\n  let {\n    capital,\n    latlng\n  } = _ref;\n  const [weather, setWeather] = useState({});\n  const [showWeather, setShowWeather] = useState(false);\n\n  const hook = () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latlng[0]}&lon=${latlng[1]}&appid=${process.env.REACT_APP_API_KEY}&units=metric`).then(response => {\n      setWeather(response.data);\n      setShowWeather(true);\n    });\n  };\n\n  useEffect(hook, []);\n\n  if (showWeather) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Weather in \", capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"temperature \", weather.main.temp, \" Celcius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Weather, \"hOTcE2SmEjj02EhjFF27HYCfoMY=\");\n\n_c = Weather;\n\nconst Country = _ref2 => {\n  let {\n    country,\n    back\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: country.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"capital \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"area \", country.area]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"languages:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: country.languages.map(language => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: language.name\n      }, language.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: country.flags.png,\n      alt: \"flag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: back,\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Weather, {\n      capital: country.capital,\n      latlng: country.latlng\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Country;\nexport default Country;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Weather\");\n$RefreshReg$(_c2, \"Country\");","map":{"version":3,"sources":["/home/mva18/Projects/fullstack/part2/2.11-2.14/2.12-2.14/src/components/Country.js"],"names":["useEffect","useState","axios","Weather","capital","latlng","weather","setWeather","showWeather","setShowWeather","hook","get","process","env","REACT_APP_API_KEY","then","response","data","main","temp","Country","country","back","name","area","languages","map","language","flags","png"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAsB;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMS,IAAI,GAAG,MAAM;AACfR,IAAAA,KAAK,CAACS,GAAN,CAAW,uDAAsDN,MAAM,CAAC,CAAD,CAAI,QAAOA,MAAM,CAAC,CAAD,CAAI,UAASO,OAAO,CAACC,GAAR,CAAYC,iBAAkB,eAAnI,EACKC,IADL,CACUC,QAAQ,IAAI;AAAET,MAAAA,UAAU,CAACS,QAAQ,CAACC,IAAV,CAAV;AAA2BR,MAAAA,cAAc,CAAC,IAAD,CAAd;AAAsB,KADzE;AAEH,GAHD;;AAIAT,EAAAA,SAAS,CAACU,IAAD,EAAO,EAAP,CAAT;;AAEA,MAAGF,WAAH,EAAgB;AACZ,wBACI;AAAA,8BACI;AAAA,kCAAgBJ,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mCAAgBE,OAAO,CAACY,IAAR,CAAaC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;AACJ,CAlBD;;GAAMhB,O;;KAAAA,O;;AAoBN,MAAMiB,OAAO,GAAG,SAAqB;AAAA,MAApB;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAoB;AACjC,sBACI;AAAA,4BACI;AAAA,gBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BAAYF,OAAO,CAACjB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,0BAASiB,OAAO,CAACG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,gBACKH,OAAO,CAACI,SAAR,CAAkBC,GAAlB,CAAsBC,QAAQ,iBAC3B;AAAA,kBAAwBA,QAAQ,CAACJ;AAAjC,SAAQI,QAAQ,CAACJ,IAAjB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YALJ,eAUI;AAAK,MAAA,GAAG,EAAEF,OAAO,CAACO,KAAR,CAAcC,GAAxB;AAA6B,MAAA,GAAG,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEP,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ,eAcI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAED,OAAO,CAACjB,OAA1B;AAAmC,MAAA,MAAM,EAAEiB,OAAO,CAAChB;AAAnD;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAnBD;;MAAMe,O;AAqBN,eAAeA,OAAf","sourcesContent":["import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst Weather = ({capital, latlng}) => {\n    const [weather, setWeather] = useState({})\n    const [showWeather, setShowWeather] = useState(false)\n\n    const hook = () => {\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latlng[0]}&lon=${latlng[1]}&appid=${process.env.REACT_APP_API_KEY}&units=metric`)\n            .then(response => { setWeather(response.data); setShowWeather(true) })\n    }\n    useEffect(hook, [])\n\n    if(showWeather) {\n        return (\n            <div>\n                <h2>Weather in {capital}</h2>\n                <p>temperature {weather.main.temp} Celcius</p>\n            </div>\n        )\n    }\n}\n\nconst Country = ({country, back}) => {\n    return (\n        <div>\n            <h1>{country.name}</h1>\n            <p>capital {country.capital}</p>\n            <p>area {country.area}</p>\n            <h2>languages:</h2>\n            <ul>\n                {country.languages.map(language =>\n                    <p key={language.name}>{language.name}</p>\n                )}\n            </ul>\n            <img src={country.flags.png} alt={\"flag\"}/>\n            <div>\n                <button onClick={back}>back</button>\n            </div>\n            <Weather capital={country.capital} latlng={country.latlng} />\n        </div>\n    )\n}\n\nexport default Country;"]},"metadata":{},"sourceType":"module"}